buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


apply plugin: 'eclipse'
apply plugin: 'maven-publish'

apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, "undestroying.refmap.json"
}

version = "${mc_version}-${mod_version}"
group = "${group}"
archivesBaseName = "${mod_id}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
	// mappings channel: project.mappings_channel.toString(), version: project.mappings_version.toString()   
	mappings channel: 'official', version: '1.16.5'  

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            
        	arg "-mixin.config=undestroying.mixins.json"
        	
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

        	arg "-mixin.config=undestroying.mixins.json"
        	
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
		
		data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            
			args "--mod", project.mod_id.toString(), "--all", "--output", "\"" + file("src/generated/resources").toString() + "\"", "--validate", "--existing", "\"" + sourceSets.main.resources.srcDirs[0] + "\""

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.2:processor'
}

repositories {
}

jar {
    manifest {
        attributes([
        	"Specification-Title": project.mod_id,
            "Specification-Vendor": "Affehund",
            "Specification-Version": "1.0",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Affehund",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"), 
			'MixinConfigs': 'undestroying.mixins.json'
   		])       	
    }
}

jar.finalizedBy('reobfJar') 

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
